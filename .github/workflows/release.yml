name: Release and Publish

on:
  # Trigger the workflow on push to the main branch
  push:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.PAT }}
  NODE_AUTH_TOKEN: ${{ secrets.PAT }}
  NPM_CONFIG_PROVENANCE: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Cache node_modules to prevent redundant installs
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: ðŸ“¥ Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build project
        run: npm run build

  release:
    needs: setup  # Ensure that the release job waits for the setup job
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Restore cache from the setup job (node_modules and Nx dependencies)
      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Verify Nx Installation
        run: npx nx --version

      - name: ðŸš€ Release
        run: npx nx release --skip-publish

  publish:
    needs: [setup, release]  # Ensure that the publish job waits for both setup and release jobs
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # needed for provenance data generation
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Restore cache from the setup job (node_modules and Nx dependencies)
      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Print Environment Info
        run: npx nx report

      - name: Publish packages
        run: npx nx release publish
